testmail.py

import requests
import re

OLLAMA_URL = "http://localhost:11434/api/chat"

def call_model(prompt: str) -> dict:
    payload = {
        "model": "mistral",
        "messages": [
            {"role": "system", "content": "You are a helpful assistant that writes professional emails."},
            {"role": "user", "content": prompt.strip()}
        ],
        "stream": False
    }

    try:
        response = requests.post(OLLAMA_URL, json=payload)
        response.raise_for_status()
        content = response.json()["message"]["content"].strip()
        return parse_email(content)
    except requests.RequestException as e:
        return {"error": f"Error communicating with Ollama: {e}"}

def parse_email(raw_email: str) -> dict:
    subject_match = re.search(r"(Subject:.*?)\n", raw_email, re.IGNORECASE)
    greeting_match = re.search(r"(Dear .*?,)", raw_email)
    closing_match = re.search(r"(Best regards,.*)", raw_email, re.DOTALL | re.IGNORECASE)

    subject = subject_match.group(1).strip() if subject_match else "Subject: [No subject found]"
    greeting = greeting_match.group(1).strip() if greeting_match else "Dear Sir/Madam,"
    closing = closing_match.group(1).strip() if closing_match else "Best regards,\nName"

    body = raw_email
    for part in [subject, greeting, closing]:
        body = body.replace(part, '')

    paragraphs = [p.strip() for p in body.strip().split('\n') if p.strip()]
    return {
        "subject": subject,
        "greeting": greeting,
        "paragraphs": paragraphs,
        "closing": closing
    }






app.py





from flask import Flask, render_template, request
from testmail import call_model
from datetime import datetime

app = Flask(__name__)

@app.route("/", methods=["GET", "POST"])
def index():
    email_data = {}

    if request.method == "POST":
        prompt = request.form["prompt"]
        result = call_model(prompt)
        if "error" not in result:
            result["date"] = datetime.now().strftime("%B %d, %Y")
            email_data = result
        else:
            email_data = {"error": result["error"]}

    return render_template("index.html", email=email_data)

if __name__ == "__main__":
    app.run(debug=True)









index.html 




<!DOCTYPE html>
<html>
<head>
    <title>Email Generator</title>
    <link rel="stylesheet" href="{{ url_for('static', filename='styles.css') }}">
</head>
<body>
    <div class="container">
        <h1>Email Generator Assistant</h1>

        <form method="POST">
            <textarea name="prompt" placeholder="Describe your email need..." required></textarea>
            <button type="submit" name="action" value="generate">Generate</button>
            <button type="reset" class="clear-btn">Clear</button>
        </form>

        {% if email %}
            <!-- Font Selection -->
            <div class="font-controller">
                <label for="font-global">Font for entire email:</label>
                <select id="font-global" onchange="changeGlobalFont()">
                    <option value="Arial">Arial</option>
                    <option value="Georgia">Georgia</option>
                    <option value="Times New Roman">Times New Roman</option>
                    <option value="Courier New">Courier New</option>
                    <option value="Verdana">Verdana</option>
                    <option value="Comic Sans MS">Comic Sans MS</option>
                    <option value="Lucida Console">Lucida Console</option>
                    <option value="Tahoma">Tahoma</option>
                    <option value="Garamond">Garamond</option>
                    <option value="italic">Italic Style</option>
                </select>
            </div>

            <!-- Toolbar for selected text -->
            <div class="toolbar">
                <button type="button" onclick="document.execCommand('bold')"><b>B</b></button>
                <button type="button" onclick="document.execCommand('underline')"><u>U</u></button>
            </div>

            <!-- Copy Button -->
            <div class="copy-wrapper">
                <button type="button" id="copyBtn" onclick="copyEmailToClipboard()">ðŸ“‹ Copy Email</button>
                <span id="copy-status" class="copy-status"></span>
            </div>

            <!-- Email Output -->
            <div class="chat-output" id="email-preview" contenteditable="true">
                {% if email.error %}
                    <p style="color: red;"><strong>Error:</strong> {{ email.error }}</p>
                {% else %}
                    <div><strong>Date:</strong> {{ email.date }}</div>
                    <div><strong>{{ email.subject }}</strong></div>
                    <div><strong>{{ email.greeting }}</strong></div>
                    {% for para in email.paragraphs %}
                        <p>{{ para }}</p>
                    {% endfor %}
                    <div class="footer">
                        {{ email.closing.replace('\n', '<br>') | safe }}
                    </div>
                {% endif %}
            </div>
        {% endif %}
    </div>

    <script>
        function changeGlobalFont() {
            const selectedFont = document.getElementById("font-global").value;
            const previewBox = document.getElementById("email-preview");

            if (selectedFont === "italic") {
                previewBox.style.fontStyle = "italic";
                previewBox.style.fontFamily = "Arial";
            } else {
                previewBox.style.fontFamily = selectedFont;
                previewBox.style.fontStyle = "normal";
            }
        }

        function copyEmailToClipboard() {
            const preview = document.getElementById("email-preview");
            const status = document.getElementById("copy-status");

            if (preview) {
                const range = document.createRange();
                range.selectNodeContents(preview);
                const selection = window.getSelection();
                selection.removeAllRanges();
                selection.addRange(range);

                try {
                    document.execCommand("copy");
                    selection.removeAllRanges();
                    status.textContent = "Copied!";
                    setTimeout(() => { status.textContent = ""; }, 1500);
                } catch (err) {
                    status.textContent = "Failed to copy!";
                }
            }
        }
    </script>
</body>
</html>











styles.css



body {
    font-family: 'Segoe UI', sans-serif;
    background-color: #eef1f5;
    display: flex;
    justify-content: center;
    padding: 40px;
}

.container {
    background-color: white;
    padding: 30px;
    width: 700px;
    border-radius: 14px;
    box-shadow: 0 6px 18px rgba(0, 0, 0, 0.1);
}

h1 {
    text-align: center;
    margin-bottom: 30px;
}

textarea {
    width: 100%;
    height: 120px;
    padding: 12px;
    font-size: 16px;
    border: 1px solid #ccc;
    border-radius: 8px;
    margin-bottom: 15px;
}

button {
    padding: 10px 20px;
    font-size: 16px;
    border: none;
    border-radius: 6px;
    cursor: pointer;
    margin-right: 10px;
}

button[name="action"][value="generate"] {
    background-color: #007bff;
    color: white;
}

.clear-btn {
    background-color: #dc3545;
    color: white;
}

.chat-output {
    margin-top: 20px;
    background-color: #f5f5f5;
    padding: 20px;
    border-radius: 10px;
    border-left: 5px solid #007bff;
    min-height: 150px;
}

.toolbar {
    margin-top: 20px;
    margin-bottom: 10px;
}

.toolbar button {
    background-color: #f0f0f0;
    border: 1px solid #ccc;
    padding: 6px 10px;
    font-weight: bold;
    margin-right: 5px;
    cursor: pointer;
    border-radius: 4px;
}

.font-controller {
    margin-top: 20px;
    margin-bottom: 10px;
}

.font-controller select {
    padding: 6px;
    font-size: 14px;
    border-radius: 4px;
    border: 1px solid #ccc;
}

.copy-wrapper {
    margin: 10px 0 15px 0;
}

.copy-wrapper button {
    background-color: #28a745;
    color: white;
    padding: 8px 14px;
    font-size: 15px;
    border: none;
    border-radius: 6px;
    cursor: pointer;
}

.copy-status {
    margin-left: 10px;
    font-size: 14px;
    color: green;
    font-weight: bold;
}




